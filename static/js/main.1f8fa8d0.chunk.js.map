{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","images/image1.jpg"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","changeableUrl","axios","get","console","log","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","initialDailyData","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","barChart","backgroundColor","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","setState","this","image","src","alt","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1f8fa8d0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__2owuK\",\"card\":\"Cards_card__haAmS\",\"infected\":\"Cards_infected__36Gew\",\"recovered\":\"Cards_recovered__o3Ws3\",\"deaths\":\"Cards_deaths__2H0pv\"};","import React from 'react';\r\nimport styles from './Cards.module.css';\r\nimport { Card, CardContent, Typography, Grid} from '@material-ui/core';\r\nimport CountUp from 'react-countup'; //animation counting\r\nimport cx from 'classnames';\r\n\r\nconst Cards = ({data: {confirmed, recovered, deaths, lastUpdate} }) => {\r\n    if(!confirmed) {\r\n        return 'Loading....'\r\n\r\n    }\r\n    return (\r\n        <div className={styles.container}>\r\n        <Grid container spacing={3} justify=\"center\">\r\n        <Grid item component= {Card} xs={12} md={3} className={cx(styles.card, styles.infected)}> {/*responsiveness*/}\r\n        <CardContent>\r\n        <Typography color=\"textSecondary\" gutterBottom> Infected</Typography>\r\n    <Typography variant=\"h5\">\r\n    <CountUp start={0}\r\n    end={confirmed.value}\r\n    duration={2.2}\r\n    separator=\",\"\r\n    />\r\n    </Typography> {/*.value as named in the api*/}\r\n        <Typography color=\"textSecondary\">{new Date (lastUpdate).toDateString()}</Typography>\r\n        <Typography variant=\"body2\">Number of Covid-19 active cases</Typography>\r\n        </CardContent>\r\n        </Grid>\r\n\r\n        <Grid item component= {Card} xs={12} md={3} className={cx(styles.card, styles.recovered)}> {/*responsiveness*/}\r\n        <CardContent>\r\n        <Typography color=\"textSecondary\" gutterBottom> Recovered</Typography>\r\n        <Typography variant=\"h5\">\r\n        <CountUp start={0}\r\n    end={recovered.value}\r\n    duration={2.2}\r\n    separator=\",\"\r\n    /></Typography>\r\n    <Typography color=\"textSecondary\">{new Date (lastUpdate).toDateString()}</Typography>\r\n        <Typography variant=\"body2\">Number of Recovered Covid-19 patients</Typography>\r\n        </CardContent>\r\n        </Grid>\r\n\r\n        <Grid item component= {Card} xs={12} md={3} className={cx(styles.card, styles.deaths)}> {/*responsiveness*/}\r\n        <CardContent>\r\n        <Typography color=\"textSecondary\" gutterBottom> Deaths</Typography>\r\n        <Typography variant=\"h5\">\r\n        <CountUp start={0}\r\n    end={deaths.value}\r\n    duration={2.2}\r\n    separator=\",\"\r\n    /></Typography>\r\n        <Typography color=\"textSecondary\">{new Date (lastUpdate).toDateString()}</Typography>\r\n        <Typography variant=\"body2\">Number of Covid-19 related deaths</Typography>\r\n        </CardContent>\r\n        </Grid>\r\n\r\n        </Grid>\r\n        \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cards;","import axios from 'axios';\r\n\r\nconst url = 'https://covid19.mathdro.id/api';\r\n//Api call, only needed object are selected\r\n//Cards\r\nexport const fetchData = async (country) => {\r\n    let changeableUrl = url;\r\n\r\n    if(country) {\r\n        changeableUrl = `${url}/countries/${country}`\r\n    }\r\n\r\n\r\n    try {\r\n        const { data: {confirmed, recovered, deaths, lastUpdate } } = await axios.get(changeableUrl);\r\n        \r\n         return {confirmed, recovered, deaths, lastUpdate };\r\n    } catch (error) {\r\n        console.log(error)\r\n\r\n    }\r\n}\r\n\r\n//Charts\r\nexport const fetchDailyData = async () =>{\r\ntry {\r\n    const { data } = await axios.get(`${url}/daily`); // fetching dailt data\r\n\r\n    const modifiedData = data.map((dailyData)=> ({\r\n        confirmed: dailyData.confirmed.total,\r\n        deaths: dailyData.deaths.total,\r\n        date: dailyData.reportDate,\r\n    }));\r\n    return modifiedData;\r\n} catch (error) {\r\n    console.log(error)\r\n\r\n}\r\n}\r\n\r\n\r\n//Countries\r\nexport const fetchCountries = async () => {\r\n    try {\r\n        const {data: { countries }} = await axios.get(`${url}/countries`);\r\n        return countries.map((country)=> country.name);\r\n\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}","import React, {useState, useEffect} from 'react';\r\nimport { fetchDailyData } from '../../api';\r\nimport { Line, Bar } from 'react-chartjs-2';\r\nimport styles from './Chart.module.css';\r\n\r\nconst Chart = ({ data: {confirmed, recovered, deaths}, country }) => {\r\n    const [dailyData, setDailyData] = useState({});\r\n\r\n    useEffect(() => {\r\n        const fetchAPI = async () => {\r\n            const initialDailyData = await fetchDailyData();\r\n            setDailyData(initialDailyData);\r\n        } \r\n\r\n        fetchAPI();\r\n    }, []);\r\n\r\n    const lineChart = (\r\n        dailyData.length ? (\r\n        <Line\r\n        data={{\r\n        labels:dailyData.map(({date})=> date),\r\n        datasets: [{\r\n            data: dailyData.map(({confirmed})=> confirmed),\r\n            label: \"Infected\",\r\n            borderColor: \"rgba(111, 166, 232)\",\r\n            fill: true,\r\n        }, \r\n        {\r\n            data: dailyData.map(({deaths})=> deaths),\r\n            label: \"Deaths\",\r\n            borderColor: \"rgba(97, 21, 29)\",\r\n            fill: true,\r\n        }],\r\n    }}\r\n        />) : null \r\n    );\r\n\r\n        const barChart = (\r\n        confirmed ? (\r\n            <Bar\r\n            data={{\r\n                labels: [\"Infected\", \"Recovered\", \"Deaths\"],\r\n                datasets: [{\r\n                    label:\"People\",\r\n                    backgroundColor: [ \"rgba(111, 166, 232)\", \"rgba(133, 242, 131)\", \"rgba(97, 21, 29)\"],\r\n                    data : [confirmed.value, recovered.value, deaths.value]\r\n                }]\r\n\r\n\r\n            }}\r\n            options ={{\r\n                legend: {display: false},\r\n                title: {display: true, text: `Current state in ${country}`}\r\n\r\n            }}\r\n             />\r\n        ) : null\r\n    )\r\n    return (\r\n        <div className={styles.container}>\r\n        {country ? barChart : lineChart}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chart;","import React, { useState, useEffect } from 'react';\r\nimport { NativeSelect, FormControl } from '@material-ui/core';\r\nimport styles from './CountryPicker.module.css';\r\nimport {fetchCountries } from '../../api';\r\n\r\nconst CountryPicker = ({ handleCountryChange }) => {\r\n    const [fetchedCountries, setFetchedCountries] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchAPI = async () => {\r\n            setFetchedCountries(await fetchCountries());\r\n\r\n        }\r\n\r\n        fetchAPI();\r\n    }, [setFetchedCountries]);\r\n    \r\n\r\n    return (\r\n        <FormControl className={styles.formControl}>\r\n        <NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChange (e.target.value)}>\r\n        <option value=\"\">Global </option>\r\n        {fetchedCountries.map((country, i)=> <option key={i} value={country}> {country} </option> )}\r\n        </NativeSelect>\r\n        \r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport default CountryPicker;","import React, { Component } from 'react'\r\nimport {Cards, Chart, CountryPicker} from './components'\r\nimport styles from './App.module.css';\r\nimport { fetchData } from './api';\r\nimport image from './images/image1.jpg';\r\nexport class App extends Component {\r\n    state = {\r\n        data: {},\r\n        country: '',\r\n    }\r\n\r\n\r\n\r\n    async componentDidMount() { // async should be before componentDidMount\r\n        const data = await fetchData();\r\n\r\n        this.setState({ data })\r\n    }\r\n\r\n    handleCountryChange = async (country) => {\r\n        const data = await fetchData(country);\r\n        \r\n\r\n        this.setState({ data, country: country});\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        const {data, country} = this.state;\r\n        \r\n        return (\r\n            <div className={styles.container}>\r\n            <img className={styles.image} src={image} alt=\"corona\"/>\r\n               <Cards data={data}/>\r\n               <CountryPicker handleCountryChange={this.handleCountryChange}/>\r\n               <Chart data= {data} country={country}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root')); \r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__Ku1MH\",\"image\":\"App_image__3FZvU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__3WVLb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__3ZFgg\"};","module.exports = __webpack_public_path__ + \"static/media/image1.2289c33e.jpg\";"],"sourceRoot":""}